{"ast":null,"code":"var _jsxFileName = \"/Users/olenarostotskyy/Desktop/ada/capstone_nail_quiz_practice/react_nail_quiz_practice/src/pages/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Test.css\";\nimport Quiz from \"./Quiz\"; // import axios from \"axios\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiUrl = \"http://127.0.0.1:5000/questions\";\n\nconst Test = () => {\n  _s();\n\n  const [questionsData, setQuestions] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameEnded, setGameEnded] = useState(false); // const [index, Updateindex] = useState(0);\n\n  useEffect(() => {\n    fetch(ApiUrl).then(res => res.json()).then(data => {\n      setQuestions(data);\n      setCurrentIndex(0);\n      console.log(data);\n    });\n  }, []); // const getQuestionsFromAPI = () => {\n  //   axios\n  //     .get(\"http://127.0.0.1:5000/questions\")\n  //     .then((response) => {\n  //       setQuestions(response.data);\n  //       console.log(response);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"Can't get questions\", error);\n  //     });\n  // };\n\n  const handleAnswer = answer => {\n    const newIndex = currentIndex + 1;\n    setCurrentIndex(newIndex);\n\n    if (answer === questionsData[currentIndex].correct_answer) {\n      //increase the score\n      setScore(score + 1);\n    }\n\n    if (newIndex >= questionsData.lenght) {\n      currentIndex = 0;\n      setGameEnded(true);\n    }\n  };\n\n  return gameEnded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Your score is \", score]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this) : questionsData !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-container\",\n    children: /*#__PURE__*/_jsxDEV(Quiz, {\n      data: questionsData[currentIndex],\n      handleAnswer: handleAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading-msg\",\n    children: \" Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Test, \"cgty/RtfjlZflukJaoJLgaQVxU4=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","Quiz","ApiUrl","Test","questionsData","setQuestions","currentIndex","setCurrentIndex","score","setScore","gameEnded","setGameEnded","fetch","then","res","json","data","console","log","handleAnswer","answer","newIndex","correct_answer","lenght"],"sources":["/Users/olenarostotskyy/Desktop/ada/capstone_nail_quiz_practice/react_nail_quiz_practice/src/pages/Test.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Test.css\";\nimport Quiz from \"./Quiz\";\n// import axios from \"axios\";\n\nconst ApiUrl = \"http://127.0.0.1:5000/questions\";\n\nconst Test = () => {\n  const [questionsData, setQuestions] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameEnded, setGameEnded] = useState(false);\n\n  // const [index, Updateindex] = useState(0);\n  useEffect(() => {\n    fetch(ApiUrl)\n      .then((res) => res.json())\n      .then((data) => {\n        setQuestions(data);\n        setCurrentIndex(0);\n        console.log(data);\n      });\n  }, []);\n\n  // const getQuestionsFromAPI = () => {\n  //   axios\n  //     .get(\"http://127.0.0.1:5000/questions\")\n  //     .then((response) => {\n  //       setQuestions(response.data);\n  //       console.log(response);\n  //     })\n  //     .catch((error) => {\n  //       console.log(\"Can't get questions\", error);\n  //     });\n  // };\n\n  const handleAnswer = (answer) => {\n    const newIndex = currentIndex + 1;\n    setCurrentIndex(newIndex);\n    if (answer === questionsData[currentIndex].correct_answer) {\n      //increase the score\n      setScore(score + 1);\n    }\n    if (newIndex >= questionsData.lenght) {\n      currentIndex = 0;\n      setGameEnded(true);\n    }\n  };\n\n  return gameEnded ? (\n    <div>Your score is {score}</div>\n  ) : questionsData !== null ? (\n    <div className=\"test-container\">\n      <Quiz data={questionsData[currentIndex]} handleAnswer={handleAnswer} />\n    </div>\n  ) : (\n    <h2 className=\"loading-msg\"> Loading...</h2>\n  );\n};\n\nexport default Test;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;;AAEA,MAAMC,MAAM,GAAG,iCAAf;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,aAAD,EAAgBC,YAAhB,IAAgCN,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,CAAD,CAAhD;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C,CAJiB,CAMjB;;EACAC,SAAS,CAAC,MAAM;IACdY,KAAK,CAACV,MAAD,CAAL,CACGW,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;MACdX,YAAY,CAACW,IAAD,CAAZ;MACAT,eAAe,CAAC,CAAD,CAAf;MACAU,OAAO,CAACC,GAAR,CAAYF,IAAZ;IACD,CANH;EAOD,CARQ,EAQN,EARM,CAAT,CAPiB,CAiBjB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMG,YAAY,GAAIC,MAAD,IAAY;IAC/B,MAAMC,QAAQ,GAAGf,YAAY,GAAG,CAAhC;IACAC,eAAe,CAACc,QAAD,CAAf;;IACA,IAAID,MAAM,KAAKhB,aAAa,CAACE,YAAD,CAAb,CAA4BgB,cAA3C,EAA2D;MACzD;MACAb,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;IACD;;IACD,IAAIa,QAAQ,IAAIjB,aAAa,CAACmB,MAA9B,EAAsC;MACpCjB,YAAY,GAAG,CAAf;MACAK,YAAY,CAAC,IAAD,CAAZ;IACD;EACF,CAXD;;EAaA,OAAOD,SAAS,gBACd;IAAA,6BAAoBF,KAApB;EAAA;IAAA;IAAA;IAAA;EAAA,QADc,GAEZJ,aAAa,KAAK,IAAlB,gBACF;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACE,QAAC,IAAD;MAAM,IAAI,EAAEA,aAAa,CAACE,YAAD,CAAzB;MAAyC,YAAY,EAAEa;IAAvD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADE,gBAKF;IAAI,SAAS,EAAC,aAAd;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAPF;AASD,CAnDD;;GAAMhB,I;;KAAAA,I;AAqDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}