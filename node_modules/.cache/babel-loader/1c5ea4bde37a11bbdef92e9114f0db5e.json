{"ast":null,"code":"var _jsxFileName = \"/Users/olenarostotskyy/Desktop/ada/capstone_nail_quiz_practice/react_nail_quiz_practice/src/pages/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./Test.css\";\nimport Quiz from \"./Quiz\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApiUrl = \"http://127.0.0.1:5000/questions\";\n\nconst Test = () => {\n  _s();\n\n  const [questionsData, setQuestions] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameEnded, setGameEnded] = useState(false);\n  const [showAnwers, setShowAnswers] = useState(false);\n  useEffect(() => {\n    getQuestionsFromAPI(); // fetch(ApiUrl)\n    //   .then((res) => res.json())\n    //   .then((data) => {\n    //     const questions = data.map((question) => ({\n    //       ...question,\n    //       answers: [\n    //         question.correct_answer,\n    //         ...question.incorrect_answers,\n    //       ].sort(() => Math.random() - 0, 5),\n    //     }));\n    //     setQuestions(questions);\n    //     setCurrentIndex(0);\n    //     console.log(data);\n    //   });\n  }, []);\n\n  const getQuestionsFromAPI = () => {\n    axios.get(ApiUrl).then(res => res.json()).then(data => {\n      const questions = data.map(question => ({ ...question,\n        answers: [question.correct_answer, ...question.incorrect_answers].sort(() => Math.random() - 0, 5)\n      }));\n      setQuestions(questions);\n      setCurrentIndex(0);\n      console.log(data); // console.log(response);\n    }).catch(error => {\n      console.log(\"Can't get questions\", error);\n    });\n  };\n\n  const handleAnswer = answer => {\n    // const newIndex = currentIndex + 1;\n    // setCurrentIndex(newIndex);\n    if (!showAnwers) {\n      //prevent double answers\n      if (answer === questionsData[currentIndex].correct_answer) {\n        //increase the score\n        setScore(score + 1);\n      }\n    }\n\n    setShowAnswers(true); // if (newIndex >= questionsData.length) {\n    //   setGameEnded(true);\n    // }\n  };\n\n  const handleNextQuestion = () => {\n    setShowAnswers(false);\n    setCurrentIndex(currentIndex + 1);\n\n    if (currentIndex >= questionsData.length - 1) {\n      setGameEnded(true);\n    }\n  };\n\n  const handlePrevQuestion = () => {\n    setShowAnswers(false);\n\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n\n  return gameEnded ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-msg-card\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"score\",\n        children: [\"Your score is \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this) : questionsData !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-container\",\n    children: /*#__PURE__*/_jsxDEV(Quiz, {\n      data: questionsData[currentIndex],\n      showAnswers: showAnwers,\n      handleAnswer: handleAnswer,\n      handleNextQuestion: handleNextQuestion,\n      handlePrevQuestion: handlePrevQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"loading-msg\",\n    children: \" Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Test, \"PDb9+5QRTLngGpNZIr9yB8yovqs=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","Quiz","axios","ApiUrl","Test","questionsData","setQuestions","currentIndex","setCurrentIndex","score","setScore","gameEnded","setGameEnded","showAnwers","setShowAnswers","getQuestionsFromAPI","get","then","res","json","data","questions","map","question","answers","correct_answer","incorrect_answers","sort","Math","random","console","log","catch","error","handleAnswer","answer","handleNextQuestion","length","handlePrevQuestion"],"sources":["/Users/olenarostotskyy/Desktop/ada/capstone_nail_quiz_practice/react_nail_quiz_practice/src/pages/Test.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Test.css\";\nimport Quiz from \"./Quiz\";\nimport axios from \"axios\";\n\nconst ApiUrl = \"http://127.0.0.1:5000/questions\";\n\nconst Test = () => {\n  const [questionsData, setQuestions] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameEnded, setGameEnded] = useState(false);\n  const [showAnwers, setShowAnswers] = useState(false);\n\n  useEffect(() => {\n    getQuestionsFromAPI();\n    // fetch(ApiUrl)\n    //   .then((res) => res.json())\n    //   .then((data) => {\n    //     const questions = data.map((question) => ({\n    //       ...question,\n    //       answers: [\n    //         question.correct_answer,\n    //         ...question.incorrect_answers,\n    //       ].sort(() => Math.random() - 0, 5),\n    //     }));\n    //     setQuestions(questions);\n\n    //     setCurrentIndex(0);\n\n    //     console.log(data);\n    //   });\n  }, []);\n\n  const getQuestionsFromAPI = () => {\n    axios\n      .get(ApiUrl)\n      .then((res) => res.json())\n      .then((data) => {\n        const questions = data.map((question) => ({\n          ...question,\n          answers: [\n            question.correct_answer,\n            ...question.incorrect_answers,\n          ].sort(() => Math.random() - 0, 5),\n        }));\n\n        setQuestions(questions);\n        setCurrentIndex(0);\n\n        console.log(data);\n        // console.log(response);\n      })\n      .catch((error) => {\n        console.log(\"Can't get questions\", error);\n      });\n  };\n\n  const handleAnswer = (answer) => {\n    // const newIndex = currentIndex + 1;\n    // setCurrentIndex(newIndex);\n    if (!showAnwers) {\n      //prevent double answers\n      if (answer === questionsData[currentIndex].correct_answer) {\n        //increase the score\n        setScore(score + 1);\n      }\n    }\n    setShowAnswers(true);\n    // if (newIndex >= questionsData.length) {\n    //   setGameEnded(true);\n    // }\n  };\n  const handleNextQuestion = () => {\n    setShowAnswers(false);\n    setCurrentIndex(currentIndex + 1);\n\n    if (currentIndex >= questionsData.length - 1) {\n      setGameEnded(true);\n    }\n  };\n\n  const handlePrevQuestion = () => {\n    setShowAnswers(false);\n    if (currentIndex > 0) {\n      setCurrentIndex(currentIndex - 1);\n    }\n  };\n\n  return gameEnded ? (\n    <div className=\"score-container\">\n      <div className=\"score-msg-card\">\n        <h1 className=\"score\">Your score is {score}</h1>\n      </div>\n    </div>\n  ) : questionsData !== null ? (\n    <div className=\"test-container\">\n      <Quiz\n        data={questionsData[currentIndex]}\n        showAnswers={showAnwers}\n        handleAnswer={handleAnswer}\n        handleNextQuestion={handleNextQuestion}\n        handlePrevQuestion={handlePrevQuestion}\n      />\n    </div>\n  ) : (\n    <h2 className=\"loading-msg\"> Loading...</h2>\n  );\n};\n\nexport default Test;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}