{"ast":null,"code":"var _jsxFileName = \"/Users/olenarostotskyy/Desktop/ada/capstone_nail_quiz_practice/react_nail_quiz_practice/src/pages/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useEffect, useContext } from \"react\";\nimport AuthContext from \"./context/AuthProvider\";\nimport \"./LoginForm.css\";\nimport Avatar from \"../pictures/avatar.jpeg\"; // import axios from \"./api/axios\";\n// const LOGIN_URL = \"/auth\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const setAuth = useContext(AuthContext);\n  const userRef = useRef();\n  const errRef = useRef();\n  const [username, setUser] = useState(\"\");\n  const [password, setPwd] = useState(\"\");\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    setErrMsg(\"\");\n  }, [username, password]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = fetch(\"http://127.0.0.1:5000/users/auth\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      }); // const response = await axios.post(\n      //   LOGIN_URL,\n      //   JSON.stringify({ username, password }),\n      //   {\n      //     headers: { \"Content-Type\": \"application/json\" },\n      //     withCredentials: true,\n      //   }\n      // );\n\n      console.log(JSON.stringify(response)); // //console.log(JSON.stringify(response));\n      // const accessToken = \"token\";\n      // const roles = \"response?.data?.roles;\";\n\n      setAuth.setAuth(username);\n      setUser(\"\");\n      setPwd(\"\");\n      setSuccess(true);\n      console.log(success);\n    } catch (err) {\n      var _err$response, _err$response2;\n\n      console.log(err);\n\n      if (!(err !== null && err !== void 0 && err.response)) {\n        setErrMsg(\"No Server Response\");\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 400) {\n        setErrMsg(\"Missing Username or Password\");\n      } else if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        setErrMsg(\"Unauthorized\");\n      } else {\n        setErrMsg(\"Login Failed\");\n      }\n\n      errRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-success-container\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"login-section-success\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"You are logged in!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: setAuth === null || setAuth === void 0 ? void 0 : setAuth.auth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/home\",\n            children: \"Go to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"login-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          ref: errRef,\n          className: errMsg ? \"errmsg\" : \"offscreen\",\n          \"aria-live\": \"assertive\",\n          children: errMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Avatar,\n            alt: \"Avatar\",\n            className: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            ref: userRef,\n            autoComplete: \"off\",\n            onChange: e => setUser(e.target.value),\n            value: username,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            onChange: e => setPwd(e.target.value),\n            value: password,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Need an Account?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"line\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/register\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Login, \"D7a2wUpO8xsdH2zlrILGP8PBILc=\");\n\n_c = Login;\nexport default Login; // import React, { useState } from \"react\";\n// import Button from \"react-bootstrap/Button\";\n// import Form from \"react-bootstrap/Form\";\n// import { Link } from \"react-router-dom\";\n// import \"./LoginForm.css\";\n// import Avatar from \"../pictures/avatar.jpeg\";\n// function LoginForm() {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const loginUser = () => {\n//     console.log(email);\n//     console.log(password);\n//     setEmail(\"\");\n//     setPassword(\"\");\n//   };\n//   return (\n//     <div className=\"login-container\">\n//       <h1>Log in</h1>\n//       <div className=\"login-form\">\n//         <form className=\"form\">\n//           <div className=\"img-container\">\n//             <img src={Avatar} alt=\"Avatar\" className=\"avatar\"></img>\n//           </div>\n//           <div className=\"fields-container\">\n//             <label className=\"username\">\n//               <b>Username</b>\n//             </label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter Username\"\n//               value={email}\n//               name=\"email\"\n//               onChange={(e) => {\n//                 setEmail(e.target.value);\n//               }}\n//               required\n//             ></input>\n//             <label className=\"password\">\n//               <b>Password</b>\n//             </label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Enter Password\"\n//               value={password}\n//               name=\"password\"\n//               onChange={(e) => {\n//                 setPassword(e.target.value);\n//               }}\n//               required\n//             ></input>\n//             <button onClick={loginUser} type=\"submit\">\n//               Log in\n//             </button>\n//             <div>\n//               <small>\n//                 Do not have account?<Link to=\"/sign-up\">Create one</Link>{\" \"}\n//               </small>\n//             </div>\n//           </div>\n//         </form>\n//         {/* <Form>\n//           <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//             <Form.Label>Email address</Form.Label>\n//             <Form.Control\n//               type=\"email\"\n//               placeholder=\"Enter email\"\n//               value={email}\n//               name=\"email\"\n//               onChange={(e) => {\n//                 setEmail(e.target.value);\n//               }}\n//             />\n//             <Form.Text className=\"text-muted\">\n//               We'll never share your email with anyone else.\n//             </Form.Text>\n//           </Form.Group>\n//           <br></br>\n//           <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//             <Form.Label>Password</Form.Label>\n//             <Form.Control\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               name=\"password\"\n//               onChange={(e) => {\n//                 setPassword(e.target.value);\n//               }}\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n//             <Form.Check type=\"checkbox\" label=\"Check me out\" />\n//           </Form.Group>\n//           <Button as=\"sub\" variant=\"primary\" onClick={loginUser}>\n//             Login\n//           </Button>\n//           <Form.Group>\n//             <small>\n//               Do not have account?<Link to=\"/sign-up\">Create one</Link>{\" \"}\n//             </small>\n//           </Form.Group>\n//         </Form> */}\n//       </div>\n//     </div>\n//   );\n// }\n// export default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useRef","useState","useEffect","useContext","AuthContext","Avatar","Login","setAuth","userRef","errRef","username","setUser","password","setPwd","errMsg","setErrMsg","success","setSuccess","current","focus","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","console","log","err","status","auth","target","value"],"sources":["/Users/olenarostotskyy/Desktop/ada/capstone_nail_quiz_practice/react_nail_quiz_practice/src/pages/LoginForm.js"],"sourcesContent":["import { useRef, useState, useEffect, useContext } from \"react\";\nimport AuthContext from \"./context/AuthProvider\";\nimport \"./LoginForm.css\";\nimport Avatar from \"../pictures/avatar.jpeg\";\n\n// import axios from \"./api/axios\";\n// const LOGIN_URL = \"/auth\";\n\nconst Login = () => {\n  const setAuth = useContext(AuthContext);\n  const userRef = useRef();\n  const errRef = useRef();\n\n  const [username, setUser] = useState(\"\");\n  const [password, setPwd] = useState(\"\");\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    setErrMsg(\"\");\n  }, [username, password]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = fetch(\"http://127.0.0.1:5000/users/auth\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username, password }),\n      });\n      // const response = await axios.post(\n      //   LOGIN_URL,\n      //   JSON.stringify({ username, password }),\n      //   {\n      //     headers: { \"Content-Type\": \"application/json\" },\n      //     withCredentials: true,\n      //   }\n      // );\n      console.log(JSON.stringify(response));\n      // //console.log(JSON.stringify(response));\n\n      // const accessToken = \"token\";\n      // const roles = \"response?.data?.roles;\";\n      setAuth.setAuth(username);\n      setUser(\"\");\n      setPwd(\"\");\n      setSuccess(true);\n      console.log(success);\n    } catch (err) {\n      console.log(err);\n      if (!err?.response) {\n        setErrMsg(\"No Server Response\");\n      } else if (err.response?.status === 400) {\n        setErrMsg(\"Missing Username or Password\");\n      } else if (err.response?.status === 401) {\n        setErrMsg(\"Unauthorized\");\n      } else {\n        setErrMsg(\"Login Failed\");\n      }\n      errRef.current.focus();\n    }\n  };\n\n  return (\n    <>\n      {success ? (\n        <div className=\"login-success-container\">\n          <section className=\"login-section-success\">\n            <h1>You are logged in!</h1>\n            <h2>{setAuth?.auth}</h2>\n            <br />\n            <p>\n              <a href=\"/home\">Go to Home</a>\n            </p>\n          </section>\n        </div>\n      ) : (\n        <div className=\"login-container\">\n          <section className=\"login-section\">\n            <p\n              ref={errRef}\n              className={errMsg ? \"errmsg\" : \"offscreen\"}\n              aria-live=\"assertive\"\n            >\n              {errMsg}\n            </p>\n            <h1>Sign In</h1>\n            <div className=\"img-container\">\n              <img src={Avatar} alt=\"Avatar\" className=\"avatar\"></img>\n            </div>\n            <form onSubmit={handleSubmit}>\n              <label htmlFor=\"username\">Username:</label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                ref={userRef}\n                autoComplete=\"off\"\n                onChange={(e) => setUser(e.target.value)}\n                value={username}\n                required\n              />\n\n              <label htmlFor=\"password\">Password:</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                onChange={(e) => setPwd(e.target.value)}\n                value={password}\n                required\n              />\n              <button>Sign In</button>\n            </form>\n            <p>\n              Need an Account?\n              <br />\n              <span className=\"line\">\n                {/*put router link here*/}\n                <a href=\"/register\">Register</a>\n              </span>\n            </p>\n          </section>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Login;\n\n// import React, { useState } from \"react\";\n// import Button from \"react-bootstrap/Button\";\n// import Form from \"react-bootstrap/Form\";\n// import { Link } from \"react-router-dom\";\n// import \"./LoginForm.css\";\n// import Avatar from \"../pictures/avatar.jpeg\";\n\n// function LoginForm() {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   const loginUser = () => {\n//     console.log(email);\n//     console.log(password);\n\n//     setEmail(\"\");\n//     setPassword(\"\");\n//   };\n//   return (\n//     <div className=\"login-container\">\n//       <h1>Log in</h1>\n//       <div className=\"login-form\">\n//         <form className=\"form\">\n//           <div className=\"img-container\">\n//             <img src={Avatar} alt=\"Avatar\" className=\"avatar\"></img>\n//           </div>\n\n//           <div className=\"fields-container\">\n//             <label className=\"username\">\n//               <b>Username</b>\n//             </label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter Username\"\n//               value={email}\n//               name=\"email\"\n//               onChange={(e) => {\n//                 setEmail(e.target.value);\n//               }}\n//               required\n//             ></input>\n\n//             <label className=\"password\">\n//               <b>Password</b>\n//             </label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Enter Password\"\n//               value={password}\n//               name=\"password\"\n//               onChange={(e) => {\n//                 setPassword(e.target.value);\n//               }}\n//               required\n//             ></input>\n\n//             <button onClick={loginUser} type=\"submit\">\n//               Log in\n//             </button>\n//             <div>\n//               <small>\n//                 Do not have account?<Link to=\"/sign-up\">Create one</Link>{\" \"}\n//               </small>\n//             </div>\n//           </div>\n//         </form>\n//         {/* <Form>\n//           <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n//             <Form.Label>Email address</Form.Label>\n//             <Form.Control\n//               type=\"email\"\n//               placeholder=\"Enter email\"\n//               value={email}\n//               name=\"email\"\n//               onChange={(e) => {\n//                 setEmail(e.target.value);\n//               }}\n//             />\n//             <Form.Text className=\"text-muted\">\n//               We'll never share your email with anyone else.\n//             </Form.Text>\n//           </Form.Group>\n//           <br></br>\n//           <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n//             <Form.Label>Password</Form.Label>\n//             <Form.Control\n//               type=\"password\"\n//               placeholder=\"Password\"\n//               value={password}\n//               name=\"password\"\n//               onChange={(e) => {\n//                 setPassword(e.target.value);\n//               }}\n//             />\n//           </Form.Group>\n//           <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n//             <Form.Check type=\"checkbox\" label=\"Check me out\" />\n//           </Form.Group>\n//           <Button as=\"sub\" variant=\"primary\" onClick={loginUser}>\n//             Login\n//           </Button>\n//           <Form.Group>\n//             <small>\n//               Do not have account?<Link to=\"/sign-up\">Create one</Link>{\" \"}\n//             </small>\n//           </Form.Group>\n//         </Form> */}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LoginForm;\n"],"mappings":"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},"metadata":{},"sourceType":"module"}